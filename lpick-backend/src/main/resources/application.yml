spring:
  config:
    import:
      - optional:file:/app/API-KEY.yml
      - optional:classpath:API-KEY.yml
  sql:
    init:
      mode: always
      encoding: UTF-8
      schema-locations:
        - classpath:schema.sql   # 스키마(DDL), 테이블 구조
      data-locations:
        - classpath:data.sql     # 초기 데이터(DML), 실제 데이터 기입 sql
      platform: postgresql # h2가 아닌 postgresql임을 명시적으로 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${oauth2.client.kakao.client-id}
            authorization-grant-type: ${oauth2.client.kakao.authorization-grant-type}
            client-name: kakao
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: none
  data:
    redis:
      host: ${redis.name}
      port: 6379

token:
  secret: ${secret.token}
  access_token_expiration_time: 3600000 # 60 * 60 * 1000 1시간
  refresh_token_expiration_time: 604800000 # 7 * 24 * 60 * 60 * 1000 1주

logging:
  level:
    org.springframework.security.web.DefaultSecurityFilterChain: debug

# swagger 설정
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    display-request-duration: true
    persistAuthorization: true  # Swagger UI 페이지 새로고침해도 인증정보 유지