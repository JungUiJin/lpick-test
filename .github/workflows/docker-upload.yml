name: 백엔드 도커 이미지 최신화

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설치
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: gradlew 실행 권한 부여
        working-directory: ./lpick-backend
        run: chmod +x gradlew

      - name: CI용 API-KEY.yml 생성
        working-directory: ./lpick-backend
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.API_KEY_CONTENT }}" > src/main/resources/API-KEY.yml

      - name: Gradle 빌드
        working-directory: ./lpick-backend
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test_db
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass
        run: ./gradlew clean build

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        working-directory: ./lpick-backend
        run: |
          docker build -t junguijin/lpick-backend:latest .
          docker push junguijin/lpick-backend:latest

      # docker-compose.yml 업로드
      - name: docker-compose.yml 업로드
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./lpick-backend/docker-compose.yml"
          target: "~/lpick-server"

      # API-KEY.yml 생성
      - name: API-KEY.yml 생성
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/lpick-server
            echo "${{ secrets.API_KEY_CONTENT }}" > ~/lpick-server/API-KEY.yml

      # docker-compose로 서비스 실행
      - name: EC2 docker-compose 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/lpick-server
            docker-compose pull
            docker-compose down
            docker-compose up -d
